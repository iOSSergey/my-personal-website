user  nginx;
worker_processes  1;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    server {
        listen 80;
        return 301 https://$host$request_uri;  # Redirect HTTP to HTTPS
    }

    server {
        listen 443 ssl;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        # Serve files from /usr/share/nginx/html for the root URL
        root /usr/share/nginx/html;
        index index.html index.htm;

        # Redirect from / to /about-me
        location = / {
            return 301 /about-me;
        }

        # Redirect requests like /new-resume/ to /new-resume.html
        location / {
            try_files $uri $uri/ $uri.html =404;
        }

        # Configuration for Django application in a subdirectory
        location /client-management-system/ {
            proxy_pass http://cms:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Handling static files
        location /static/ {
            alias /app/staticfiles/;
        }
    }

    # Configuration for staging.pavlyuk.online
    server {
        listen 80;
        server_name staging.pavlyuk.online;

        # Redirect HTTP to HTTPS
        return 301 https://staging.pavlyuk.online$request_uri;
    }

    server {
        listen 443 ssl;
        server_name staging.pavlyuk.online;

        ssl_certificate /etc/nginx/ssl/staging_fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/staging_privkey.pem;

        # Serve files from /var/www/staging for the root URL
        root /var/www/staging/html;  # Change this to the actual staging root if needed
        index index.html index.htm;

        location = / {
            return 301 /about-me;
        }

        # Redirect requests like /new-resume/ to /new-resume.html
        location / {
            try_files $uri $uri/ $uri.html =404;
        }

        # Handling static files
        location /static/ {
            alias /var/www/html/static/;
        }

        # Redirect all 404 errors to the root
        error_page 404 = @error404;
        location @error404 {
            return 301 /;
        }
    }
}