services:
  web-production:
    build: .
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/app/staticfiles
      - ./config/nginx/nginx_production.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./html:/usr/share/nginx/html/
    networks:
      - webnet
    restart: always
  
  web-staging:
    build: .
    container_name: nginx-staging
    ports:
      - "8080:80"
      - "8444:443"
    volumes:
      - static_volume_staging:/app/staticfiles
      - ./config/nginx/nginx_staging.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./html:/var/www/staging/html/
    networks:
      - webnet
    restart: always
  
  cms:
    image: iossergey/client_management_system:latest
    container_name: cms
    env_file:
      - ./client_management_system.env
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    command: >
      /bin/sh -c "python manage.py collectstatic --noinput &&
                  python manage.py runserver 0.0.0.0:8000"
    restart: always
    networks:
      - webnet

networks:
  webnet:

volumes:
  static_volume:
  static_volume_staging:
  media_volume: