services:
  web:
    build: .
    container_name: nginx
    env_file:
      - ./client_management_system.env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/app/staticfiles
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
      - ./html:/usr/share/nginx/html/
      - certbot_www:/var/www/certbot
      - /etc/letsencrypt:/etc/letsencrypt
    networks:
      - webnet
    restart: always

  cms:
    image: iossergey/client_management_system:latest
    mem_limit: 100m
    memswap_limit: 150m
    container_name: cms
    env_file:
      - ./client_management_system.env
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    command: >
      /bin/sh -c "python manage.py makemigrations &&
            python manage.py migrate &&
            python manage.py collectstatic --noinput &&
            python manage.py runserver 0.0.0.0:8000"
    restart: always
    networks:
      - webnet

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - certbot_www:/var/www/certbot
      - /etc/letsencrypt:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 6h & wait $!; certbot renew; done'"
    networks:
      - webnet

networks:
  webnet:

volumes:
  static_volume:
  media_volume:
  certbot_www: